/*
 This file is generated by Code Generator
 for CIMClass SAP_ITSAMArchSelParmAccessor
 */

package com.sap.archtech.archconn.mbeans;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.util.Locale;

import javax.naming.NamingException;

import com.sap.archtech.archconn.exceptions.ArchConnException;
import com.sap.archtech.archconn.util.SchedulerDelegate;

/*
 * ManagedElement is an abstract class that provides a common superclass (or top
 * of the inheritance tree) for the non-association classes in the CIM Schema.
 * 
 * @version 1.0
 */

public class SAP_ITSAMArchSelParmAccessor_Impl implements SAP_ITSAMArchSelParmAccessor
{
  private final SchedulerDelegate delegate;
  
  public SAP_ITSAMArchSelParmAccessor_Impl()
  {
    try
    {
      delegate = new SchedulerDelegate();
    }
    catch(NamingException e)
    {
      throw new RuntimeException(e);
    }
  }
  
  public com.sap.archtech.archconn.mbeans.SAP_ITSAMArchSelParm[] getArchSetSelParams(String archSetName, byte[] uiLocale)
  {
    ConnectorAccessPermission.checkPermission("archive", archSetName);

    ObjectInputStream uiLocaleIS = null;
    try
    {
    	// deserialize Locale parameter
      uiLocaleIS = new ObjectInputStream(new ByteArrayInputStream(uiLocale));
      Locale uiLocaleObj = (Locale)uiLocaleIS.readObject();
      // get job parameter definitions
      ArrayList<SAP_ITSAMArchSelParm> paramList = delegate.getArchsetSpecificJobParameterDefinitions(archSetName, true, uiLocaleObj);
      return paramList.toArray(new SAP_ITSAMArchSelParm[paramList.size()]);
    }
    catch(IOException e)
    {
      throw new RuntimeException(e);
    }
    catch(ClassNotFoundException e)
    {
      throw new RuntimeException(e);
    }
    catch(ArchConnException e)
    {
      throw new RuntimeException(e);
    }
    finally
    {
      if(uiLocaleIS != null)
      {
        try
        {
          uiLocaleIS.close();
        }
        catch(IOException e)
        {
          // $JL-EXC$
        }
      }
    }
  }
  
  public boolean isJobDefinitionAvailable(String archSetName)
  {
    ConnectorAccessPermission.checkPermission("view", "*");
    return delegate.isJobDefinitionAvailable(archSetName, true);
  }
}