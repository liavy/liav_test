package com.sap.sapcontrol.client;

/**
 * Service implementation of {SAPControl} (generated by SAP WSDL to Java generator).
 */
public class SAPControlImpl extends com.sap.engine.services.webservices.espbase.client.bindings.DynamicServiceImpl implements java.io.Serializable,com.sap.sapcontrol.client.SAPControl {

  /**
   * Default service constructor.
   */
  public SAPControlImpl() throws com.sap.engine.services.webservices.jaxrpc.exceptions.WebserviceClientException {
    super();
    javax.xml.namespace.QName serviceName = new javax.xml.namespace.QName("urn:SAPControl","SAPControl");
    javax.xml.rpc.encoding.TypeMappingRegistry types = super.loadTypeRegistry("com/sap/sapcontrol/client/types.xml",this.getClass().getClassLoader());
    com.sap.engine.services.webservices.espbase.mappings.MappingRules mapping = super.loadMappingRules("com/sap/sapcontrol/client/mapping.xml",this.getClass().getClassLoader());
    com.sap.engine.services.webservices.espbase.configuration.ConfigurationRoot config = super.loadConfiguration("com/sap/sapcontrol/client/configuration.xml",this.getClass().getClassLoader());
    super.init(serviceName,types,mapping,config,this.getClass().getClassLoader());
    super.setServiceMode(JAXRPC_MODE);
  }

  /**
   * Get method for webservice port [SAPControl].
   */
  public com.sap.sapcontrol.client.SAPControlPortType getSAPControl() throws javax.xml.rpc.ServiceException  {
    javax.xml.namespace.QName portName = new javax.xml.namespace.QName("urn:SAPControl","SAPControl");
    return (com.sap.sapcontrol.client.SAPControlPortType) super.getPort(portName,com.sap.sapcontrol.client.SAPControlPortType.class);
  }

  // Service serialization code.
  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    super.writeObjectX(out);
  }

  // Service deserialization code.
  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    super.readObjectX(in);
  }

  public com.sap.sapcontrol.client.SAPControlPortType getLogicalPort() throws javax.xml.rpc.ServiceException{
    return (com.sap.sapcontrol.client.SAPControlPortType) getPort(com.sap.sapcontrol.client.SAPControlPortType.class);
  }

  public com.sap.sapcontrol.client.SAPControlPortType getLogicalPort(java.lang.String portName) throws javax.xml.rpc.ServiceException{
    return (com.sap.sapcontrol.client.SAPControlPortType) getPort(new javax.xml.namespace.QName(null,portName),com.sap.sapcontrol.client.SAPControlPortType.class);
  }

}
