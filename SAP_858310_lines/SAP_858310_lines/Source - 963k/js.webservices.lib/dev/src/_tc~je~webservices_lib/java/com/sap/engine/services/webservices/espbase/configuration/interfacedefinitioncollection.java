/*
 * Generated by SAP SchemaToJava Generator NW05 on Tue Feb 22 14:02:04 EET 2005
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.services.webservices.espbase.configuration;

/**
 * Schema complexType Java representation.
 * Represents type {http://www.sap.com/webas/710/ws/configuration-descriptor}InterfaceDefinitionCollection
 */
public  class InterfaceDefinitionCollection implements java.io.Serializable,java.lang.Cloneable {

  // Element field for element {}InterfaceDefinition
  private java.util.ArrayList _f_InterfaceDefinition = new java.util.ArrayList();
  /**
   * Set method for element {}InterfaceDefinition
   */
  public void setInterfaceDefinition(com.sap.engine.services.webservices.espbase.configuration.InterfaceDefinition[] _InterfaceDefinition) {
    this._f_InterfaceDefinition.clear();
    if (_InterfaceDefinition != null) {
      for (int i=0; i<_InterfaceDefinition.length; i++) {
        if (_InterfaceDefinition[i] != null)
          this._f_InterfaceDefinition.add(_InterfaceDefinition[i]);
      }
    }
  }
  
  public InterfaceDefinition getInterfaceDefinition(String interfaceMappingId) {
    for (int i=0; i<_f_InterfaceDefinition.size(); i++) {
      InterfaceDefinition interfaceDefinition = (InterfaceDefinition) _f_InterfaceDefinition.get(i);
      if (interfaceMappingId.equals(interfaceDefinition.getInterfaceMappingId())) {
        return interfaceDefinition;
      }
    }
    return null;
  }
  
  
  public InterfaceDefinition removeInterfaceDefinition(String interfaceMappingId) {
    for (int i=0; i<_f_InterfaceDefinition.size(); i++) {
      InterfaceDefinition interfaceDefinition = (InterfaceDefinition) _f_InterfaceDefinition.get(i);
      if (interfaceMappingId.equals(interfaceDefinition.getInterfaceMappingId())) {
        _f_InterfaceDefinition.remove(i);
        return interfaceDefinition;
      }
    }
    return null;
  }
  
  /**
   * Get method for element {}InterfaceDefinition
   */
  public com.sap.engine.services.webservices.espbase.configuration.InterfaceDefinition[] getInterfaceDefinition() {
    com.sap.engine.services.webservices.espbase.configuration.InterfaceDefinition[] result = new com.sap.engine.services.webservices.espbase.configuration.InterfaceDefinition[_f_InterfaceDefinition.size()];
    _f_InterfaceDefinition.toArray(result);
    return result;
  }

  /**
   * Equals method implementation.
   */
  public boolean equals(Object object) {
    if (object == null) return false;
    if (!(object instanceof InterfaceDefinitionCollection)) return false;
    InterfaceDefinitionCollection typed = (InterfaceDefinitionCollection) object;
    com.sap.engine.services.webservices.espbase.configuration.InterfaceDefinition[] _f_InterfaceDefinition1 = this.getInterfaceDefinition();
    com.sap.engine.services.webservices.espbase.configuration.InterfaceDefinition[] _f_InterfaceDefinition2 = typed.getInterfaceDefinition();
    if (_f_InterfaceDefinition1 != null) {
      if (_f_InterfaceDefinition2 == null) return false;
      if (_f_InterfaceDefinition1.length != _f_InterfaceDefinition2.length) return false;
      for (int i1 = 0; i1 < _f_InterfaceDefinition1.length ; i1++) {
        if (_f_InterfaceDefinition1[i1] != null) {
          if (_f_InterfaceDefinition2[i1] == null) return false;
          if (!_f_InterfaceDefinition1[i1].equals(_f_InterfaceDefinition2[i1])) return false;
        } else {
          if (_f_InterfaceDefinition2[i1] != null) return false;
        }
      }
    } else {
      if (_f_InterfaceDefinition2 != null) return false;
    }
    return true;
  }

  /**
   * Hashcode method implementation.
   */
  public int hashCode() {
    int result = 0;
    com.sap.engine.services.webservices.espbase.configuration.InterfaceDefinition[] _f_InterfaceDefinition1 = this.getInterfaceDefinition();
    if (_f_InterfaceDefinition1 != null) {
      for (int i1 = 0; i1 < _f_InterfaceDefinition1.length ; i1++) {
        if (_f_InterfaceDefinition1[i1] != null) {
          result+= _f_InterfaceDefinition1[i1].hashCode();
        }
      }
    }
    return result;
  }
}
