/*
 * Generated by SAP SchemaToJava Generator NW05 on Mon Oct 02 10:43:09 EEST 2006
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.services.webservices.espbase.client.wsa.generated.ns200508;

/**
 * Schema complexType Java representation.
 * Represents type {http://www.w3.org/2005/08/addressing}MetadataType
 */
public  class MetadataType implements java.io.Serializable {

  private static final long serialVersionUID = 693901400029420791L;

  // Wildcard 'any' field
  private java.util.ArrayList _f__any = new java.util.ArrayList();
  public void set_any(org.w3c.dom.Element[] __any) {
    this._f__any.clear();
    if (__any != null) {
      for (int i=0; i<__any.length; i++) {
        if (__any[i] != null)
          this._f__any.add(__any[i]);
      }
    }
  }
  public org.w3c.dom.Element[] get_any() {
    org.w3c.dom.Element[] result = new org.w3c.dom.Element[_f__any.size()];
    _f__any.toArray(result);
    return result;
  }

  /**
   * Equals method implementation.
   */
  public boolean equals(Object object) {
    if (object == null) return false;
    if (!(object instanceof MetadataType)) return false;
    MetadataType typed = (MetadataType) object;
    org.w3c.dom.Element[] _f__any1 = this.get_any();
    org.w3c.dom.Element[] _f__any2 = typed.get_any();
    if (_f__any1 != null) {
      if (_f__any2 == null) return false;
      if (_f__any1.length != _f__any2.length) return false;
      for (int i1 = 0; i1 < _f__any1.length ; i1++) {
        if (_f__any1[i1] != null) {
          if (_f__any2[i1] == null) return false;
          if (!_f__any1[i1].toString().equals(_f__any2[i1].toString())) return false;
        } else {
          if (_f__any2[i1] != null) return false;
        }
      }
    } else {
      if (_f__any2 != null) return false;
    }
    return true;
  }

  /**
   * Hashcode method implementation.
   */
  public int hashCode() {
    int result = 0;
    org.w3c.dom.Element[] _f__any1 = this.get_any();
    if (_f__any1 != null) {
      for (int i1 = 0; i1 < _f__any1.length ; i1++) {
        if (_f__any1[i1] != null) {
          result+= _f__any1[i1].toString().hashCode();
        }
      }
    }
    return result;
  }
}
