/*
 * Generated by SAP SchemaToJava Generator NW05 on Thu Nov 30 13:49:03 EET 2006
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.services.webservices.espbase.configuration.p_set;

/**
 * Enumeration Java representation.
 * Represents type {http://xml.sap.com/2006/11/esi/conf/feat/}locationType
 */
public class LocationType implements java.io.Serializable {

  private static final long serialVersionUID = -756531257661069966L;

  public static final java.lang.String _UNKNOWN = "UNKNOWN";
  public static final java.lang.String _SERVER = "SERVER";
  public static final java.lang.String _CLIENT = "CLIENT";
  public static final java.lang.String _BOTH = "BOTH";

  public static final LocationType UNKNOWN = new LocationType(_UNKNOWN);
  public static final LocationType SERVER = new LocationType(_SERVER);
  public static final LocationType CLIENT = new LocationType(_CLIENT);
  public static final LocationType BOTH = new LocationType(_BOTH);

  //  Enumeration Content
  protected java.lang.String _value;

  public LocationType(java.lang.String _value) {
    if (_UNKNOWN.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_SERVER.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_CLIENT.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_BOTH.equals(_value)) {
      this._value = _value;
      return;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+_value+"] passed.");
  }

  public java.lang.String getValue() {
    return _value;
  }

  public static LocationType fromValue(java.lang.String value) {
    if (_UNKNOWN.equals(value)) {
      return UNKNOWN;
    }
    if (_SERVER.equals(value)) {
      return SERVER;
    }
    if (_CLIENT.equals(value)) {
      return CLIENT;
    }
    if (_BOTH.equals(value)) {
      return BOTH;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+value+"] passed.");
  }

  public static LocationType fromString(String value) {
    if ("UNKNOWN".equals(value)) {
      return UNKNOWN;
    }
    if ("SERVER".equals(value)) {
      return SERVER;
    }
    if ("CLIENT".equals(value)) {
      return CLIENT;
    }
    if ("BOTH".equals(value)) {
      return BOTH;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+value+"] passed.");
  }

  public java.lang.String toString() {
    if (_UNKNOWN.equals(_value)) {
      return "UNKNOWN";
    }
    if (_SERVER.equals(_value)) {
      return "SERVER";
    }
    if (_CLIENT.equals(_value)) {
      return "CLIENT";
    }
    if (_BOTH.equals(_value)) {
      return "BOTH";
    }
    return java.lang.String.valueOf(_value);
  }

  public boolean equals(java.lang.Object obj) {
    if (obj != null) {
      if (obj instanceof LocationType) {
        if (_value.equals(((LocationType)obj)._value)) {
          return true;
        }
      }
    }
    return false;
  }

  public int hashCode() {
    return this._value.hashCode();
  }

}
