/*
 * Generated by SAP SchemaToJava Generator NW05 on Wed Nov 10 18:12:45 EET 2004
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.services.webservices.espbase.mappings;

import static com.sap.engine.services.webservices.espbase.mappings.ServiceMapping.JAVA_DOC;

import javax.xml.namespace.QName;

/**
 * Schema complexType Java representation.
 * Represents type {http://sapframework.sap.com}EndpointMapping
 */
public  class EndpointMapping extends com.sap.engine.services.webservices.espbase.mappings.MappingContext implements java.io.Serializable,java.lang.Cloneable {

  public static final String PORT_WSDL_NAME = "PortWSDLName";
  public static final String PORT_JAVA_NAME = "PortJavaName";
  public static final String BINDING_NAME = "PortBinding";
  public static final String PORTTYPE_NAME = "PortPortType";
  public static final String JAVA_DOC = "JavaDoc";
  public static final String PORT_GETTER = "portGetter";

  /**
   * Returns javaDoc for the interface.
   * @return
   */
  public String getPortGetter() {
    return super.getProperty(PORT_GETTER);
  }
  
  /**
   * Sets javaDoc for the interface.
   * @param javaDoc
   */
  public void setPortGetter(String portGetter) {
    super.setProperty(PORT_GETTER, portGetter);
  }    
  
  /**
   * Returns javaDoc for the interface.
   * @return
   */
  public String getJavaDoc() {
    return super.getProperty(JAVA_DOC);
  }
  
  /**
   * Sets javaDoc for the interface.
   * @param javaDoc
   */
  public void setJavaDoc(String javaDoc) {
    super.setProperty(JAVA_DOC, javaDoc);
  }    
  
  /**
   * Returns port binding name.
   * @return
   */
  public QName getPortBinding() {
    if (super.getProperty(BINDING_NAME) == null) {
      return null;
    } else {
      return QName.valueOf(super.getProperty(BINDING_NAME));
    }
  }
  
  /**
   * Sets port binding name.
   * @param bindingName
   */
  public void setPortBinding(QName bindingName) {
    if (bindingName != null) {
      super.setProperty(BINDING_NAME,bindingName.toString());
    }
  }
  
  /**
   * Returns port portType name.
   * @return
   */
  public QName getPortPortType() {
    if (super.getProperty(PORTTYPE_NAME) == null) {
      return null;
    } else {
      return QName.valueOf(super.getProperty(PORTTYPE_NAME));
    }
  }
  
  /**
   * Sets port portType name.
   * @param ptName
   */
  public void setPortPortType(QName ptName) {
    if (ptName != null) {
      super.setProperty(PORTTYPE_NAME,ptName.toString());
    }
  }
   
  /**
   * Returns Port QName.
   * @return
   */
  public String getPortQName() {
    return super.getProperty(PORT_WSDL_NAME);
  }
  
  
  
  /**
   * Sets port QName.
   * @param portName
   */
  public void setPortQName(String portName) {
    super.setProperty(PORT_WSDL_NAME,portName); 
  }
  
  /**
   * Returns port java name.
   * @return
   */
  public String getPortJavaName() {
    return super.getProperty(PORT_JAVA_NAME);
  }
  
  /**
   * Sets port java name.
   * @param portName
   */
  public void setPortJavaName(String portName) {
    super.setProperty(PORT_JAVA_NAME,portName);
  }
  
   
  
}
