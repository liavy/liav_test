/**
 * Generated by SAP Schema-to-Java Generator
 * Tue Sep 30 15:37:42 EEST 2003
 * Chavdar Baikov (chavdar.baikov@sap.com)
 */

package com.sap.engine.services.webservices.jaxr.impl.xml;

import java.rmi.MarshalException;
import java.rmi.UnmarshalException;
import org.w3c.dom.Node;
import com.sap.engine.services.webservices.jaxrpc.encoding.SOAPDeserializationContext;
import com.sap.engine.services.webservices.jaxrpc.encoding.SOAPSerializationContext;
import com.sap.engine.lib.xml.parser.tokenizer.XMLTokenReader;
import com.sap.engine.lib.xml.parser.tokenizer.XMLTokenWriter;

public class Space extends com.sap.engine.services.webservices.jaxrpc.encoding.primitive.StringSD {
  public java.lang.String _d_originalLocalName() {
    return "/xs:schema/xs:attribute[2]/xs:simpleType"; // it was an anonymous type
  }

  public java.lang.String _d_originalUri() {
    return "http://www.w3.org/XML/1998/namespace";
  }

  public Object deserialize(String content, SOAPDeserializationContext context, Class resultClass) throws UnmarshalException {
    Object result = super.deserialize(content,context,resultClass);
    return result;
  }

  public Object deserialize(XMLTokenReader reader, SOAPDeserializationContext context, Class resultClass) throws UnmarshalException {
    Object result = super.deserialize(reader,context,resultClass);
    return result;
  }

  public Object deserialize(Node node, SOAPDeserializationContext context, Class resultClass) throws UnmarshalException {
    Object result = super.deserialize(node,context,resultClass);
    return result;
  }

  public String serialize(Object obj, SOAPSerializationContext context) throws MarshalException {
    return super.serialize(obj, context);
  }

  public void serialize(Object obj, XMLTokenWriter writer, SOAPSerializationContext context) throws MarshalException, java.io.IOException {
    super.serialize(obj, writer, context);
  }

  public void serialize(Object obj, Node node, SOAPSerializationContext context) throws MarshalException {
    super.serialize(obj, node, context);
  }
}
