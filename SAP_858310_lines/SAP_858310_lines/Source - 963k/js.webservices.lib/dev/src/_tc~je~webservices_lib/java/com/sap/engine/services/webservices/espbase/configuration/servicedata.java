/*
 * Generated by SAP SchemaToJava Generator NW05 on Tue Feb 22 14:02:04 EET 2005
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.services.webservices.espbase.configuration;

import javax.xml.namespace.QName;
import javax.xml.ws.WebServiceException;

/**
 * Schema complexType Java representation.
 * Represents type {http://www.sap.com/webas/710/ws/configuration-descriptor}ServiceData
 */
public  class ServiceData extends com.sap.engine.services.webservices.espbase.configuration.Behaviour implements java.io.Serializable,java.lang.Cloneable {

  // Attribute field for attribute {}domain-id
  private java.lang.String _a_DomainId;
  /**
   * Set method for attribute {}domain-id
   */
  public void setDomainId(java.lang.String _DomainId) {
    this._a_DomainId = _DomainId;
  }
  /**
   * Get method for attribute {}domain-id
   */
  public java.lang.String getDomainId() {
    return _a_DomainId;
  }

  // Attribute field for attribute {}contextRoot
  private java.lang.String _a_ContextRoot = "";
  /**
   * Set method for attribute {}contextRoot
   */
  public void setContextRoot(java.lang.String _ContextRoot) {
    this._a_ContextRoot = _ContextRoot;
  }
  /**
   * Get method for attribute {}contextRoot
   */
  public java.lang.String getContextRoot() {
    return _a_ContextRoot;
  }

  // Attribute field for attribute {}namespace
  private java.lang.String _a_Namespace;
  /**
   * Set method for attribute {}namespace
   */
  public void setNamespace(java.lang.String _Namespace) {
    this._a_Namespace = _Namespace;
  }
  /**
   * Get method for attribute {}namespace
   */
  public java.lang.String getNamespace() {
    return _a_Namespace;
  }

  // Attribute field for attribute {}name
  private java.lang.String _a_Name;
  /**
   * Set method for attribute {}name
   */
  public void setName(java.lang.String _Name) {
    this._a_Name = _Name;
  }
  /**
   * Get method for attribute {}name
   */
  public java.lang.String getName() {
    return _a_Name;
  }

  // Element field for element {}BindingData
  private java.util.ArrayList _f_BindingData = new java.util.ArrayList();
  /**
   * Set method for element {}BindingData
   */
  public void setBindingData(com.sap.engine.services.webservices.espbase.configuration.BindingData[] _BindingData) {
    this._f_BindingData.clear();
    if (_BindingData != null) {
      for (int i=0; i<_BindingData.length; i++) {
        if (_BindingData[i] != null)
          this._f_BindingData.add(_BindingData[i]);
      }
    }
  }
  /**
   * Get method for element {}BindingData
   */
  public com.sap.engine.services.webservices.espbase.configuration.BindingData[] getBindingData() {
    com.sap.engine.services.webservices.espbase.configuration.BindingData[] result = new com.sap.engine.services.webservices.espbase.configuration.BindingData[_f_BindingData.size()];
    _f_BindingData.toArray(result);
    return result;
  }
  
  /**
   * Returns specific binding data by name.
   * @param portName
   * @return
   */
  public BindingData getBindingData(QName portName) {
    String portLocalName = portName.getLocalPart();
    for(int i = 0; i < _f_BindingData.size(); i++) {
      BindingData bindingData = (BindingData) _f_BindingData.get(i);
      if (bindingData.getName().equals(portLocalName)) {                
        return(bindingData);
      }
    }
    return null;
  }
  
  public void addBindingData(BindingData bData) {
    this._f_BindingData.add(bData);
  }
  
  /**
   * Removes all binding data entities that reference specific interface.
   * @param interfaceMappingId
   */
  public void removeAllPorts(String interfaceMappingId) {
    int i=0;
    while (i<_f_BindingData.size()) {
      BindingData binding = (BindingData) _f_BindingData.get(i);
      if (interfaceMappingId.equals(binding.getInterfaceMappingId())) {
        _f_BindingData.remove(i);        
      } else {
        i++;
      }
    }
  }

  // Element field for element {}UDDIEntity
  private java.util.ArrayList _f_UDDIEntity = new java.util.ArrayList();
  /**
   * Set method for element {}UDDIEntity
   */
  public void setUDDIEntity(com.sap.engine.services.webservices.espbase.configuration.UDDIEntity[] _UDDIEntity) {
    this._f_UDDIEntity.clear();
    if (_UDDIEntity != null) {
      for (int i=0; i<_UDDIEntity.length; i++) {
        if (_UDDIEntity[i] != null)
          this._f_UDDIEntity.add(_UDDIEntity[i]);
      }
    }
  }
  /**
   * Get method for element {}UDDIEntity
   */
  public com.sap.engine.services.webservices.espbase.configuration.UDDIEntity[] getUDDIEntity() {
    com.sap.engine.services.webservices.espbase.configuration.UDDIEntity[] result = new com.sap.engine.services.webservices.espbase.configuration.UDDIEntity[_f_UDDIEntity.size()];
    _f_UDDIEntity.toArray(result);
    return result;
  }

  // Element field for element {}ConfigValue
  private java.util.ArrayList _f_ConfigValue = new java.util.ArrayList();
  /**
   * Set method for element {}ConfigValue
   */
  public void setConfigValue(com.sap.engine.services.webservices.espbase.configuration.ConfigValueType[] _ConfigValue) {
    this._f_ConfigValue.clear();
    if (_ConfigValue != null) {
      for (int i=0; i<_ConfigValue.length; i++) {
        if (_ConfigValue[i] != null)
          this._f_ConfigValue.add(_ConfigValue[i]);
      }
    }
  }
  /**
   * Get method for element {}ConfigValue
   */
  public com.sap.engine.services.webservices.espbase.configuration.ConfigValueType[] getConfigValue() {
    com.sap.engine.services.webservices.espbase.configuration.ConfigValueType[] result = new com.sap.engine.services.webservices.espbase.configuration.ConfigValueType[_f_ConfigValue.size()];
    _f_ConfigValue.toArray(result);
    return result;
  }

  /**
   * Equals method implementation.
   */
  public boolean equals(Object object) {
    if (super.equals(object) == false) return false;
    if (object == null) return false;
    if (!(object instanceof ServiceData)) return false;
    ServiceData typed = (ServiceData) object;
    if (this._a_DomainId != null) {
      if (typed._a_DomainId == null) return false;
      if (!this._a_DomainId.equals(typed._a_DomainId)) return false;
    } else {
      if (typed._a_DomainId != null) return false;
    }
    if (this._a_ContextRoot != null) {
      if (typed._a_ContextRoot == null) return false;
      if (!this._a_ContextRoot.equals(typed._a_ContextRoot)) return false;
    } else {
      if (typed._a_ContextRoot != null) return false;
    }
    if (this._a_Namespace != null) {
      if (typed._a_Namespace == null) return false;
      if (!this._a_Namespace.equals(typed._a_Namespace)) return false;
    } else {
      if (typed._a_Namespace != null) return false;
    }
    if (this._a_Name != null) {
      if (typed._a_Name == null) return false;
      if (!this._a_Name.equals(typed._a_Name)) return false;
    } else {
      if (typed._a_Name != null) return false;
    }
    com.sap.engine.services.webservices.espbase.configuration.BindingData[] _f_BindingData1 = this.getBindingData();
    com.sap.engine.services.webservices.espbase.configuration.BindingData[] _f_BindingData2 = typed.getBindingData();
    if (_f_BindingData1 != null) {
      if (_f_BindingData2 == null) return false;
      if (_f_BindingData1.length != _f_BindingData2.length) return false;
      for (int i1 = 0; i1 < _f_BindingData1.length ; i1++) {
        if (_f_BindingData1[i1] != null) {
          if (_f_BindingData2[i1] == null) return false;
          if (!_f_BindingData1[i1].equals(_f_BindingData2[i1])) return false;
        } else {
          if (_f_BindingData2[i1] != null) return false;
        }
      }
    } else {
      if (_f_BindingData2 != null) return false;
    }
    com.sap.engine.services.webservices.espbase.configuration.UDDIEntity[] _f_UDDIEntity1 = this.getUDDIEntity();
    com.sap.engine.services.webservices.espbase.configuration.UDDIEntity[] _f_UDDIEntity2 = typed.getUDDIEntity();
    if (_f_UDDIEntity1 != null) {
      if (_f_UDDIEntity2 == null) return false;
      if (_f_UDDIEntity1.length != _f_UDDIEntity2.length) return false;
      for (int i1 = 0; i1 < _f_UDDIEntity1.length ; i1++) {
        if (_f_UDDIEntity1[i1] != null) {
          if (_f_UDDIEntity2[i1] == null) return false;
          if (!_f_UDDIEntity1[i1].equals(_f_UDDIEntity2[i1])) return false;
        } else {
          if (_f_UDDIEntity2[i1] != null) return false;
        }
      }
    } else {
      if (_f_UDDIEntity2 != null) return false;
    }
    com.sap.engine.services.webservices.espbase.configuration.ConfigValueType[] _f_ConfigValue1 = this.getConfigValue();
    com.sap.engine.services.webservices.espbase.configuration.ConfigValueType[] _f_ConfigValue2 = typed.getConfigValue();
    if (_f_ConfigValue1 != null) {
      if (_f_ConfigValue2 == null) return false;
      if (_f_ConfigValue1.length != _f_ConfigValue2.length) return false;
      for (int i1 = 0; i1 < _f_ConfigValue1.length ; i1++) {
        if (_f_ConfigValue1[i1] != null) {
          if (_f_ConfigValue2[i1] == null) return false;
          if (!_f_ConfigValue1[i1].equals(_f_ConfigValue2[i1])) return false;
        } else {
          if (_f_ConfigValue2[i1] != null) return false;
        }
      }
    } else {
      if (_f_ConfigValue2 != null) return false;
    }
    return true;
  }

  /**
   * Hashcode method implementation.
   */
  public int hashCode() {
    int result = super.hashCode();
    if (this._a_DomainId != null) {
      result+= this._a_DomainId.hashCode();
    }
    if (this._a_ContextRoot != null) {
      result+= this._a_ContextRoot.hashCode();
    }
    if (this._a_Namespace != null) {
      result+= this._a_Namespace.hashCode();
    }
    if (this._a_Name != null) {
      result+= this._a_Name.hashCode();
    }
    com.sap.engine.services.webservices.espbase.configuration.BindingData[] _f_BindingData1 = this.getBindingData();
    if (_f_BindingData1 != null) {
      for (int i1 = 0; i1 < _f_BindingData1.length ; i1++) {
        if (_f_BindingData1[i1] != null) {
          result+= _f_BindingData1[i1].hashCode();
        }
      }
    }
    com.sap.engine.services.webservices.espbase.configuration.UDDIEntity[] _f_UDDIEntity1 = this.getUDDIEntity();
    if (_f_UDDIEntity1 != null) {
      for (int i1 = 0; i1 < _f_UDDIEntity1.length ; i1++) {
        if (_f_UDDIEntity1[i1] != null) {
          result+= _f_UDDIEntity1[i1].hashCode();
        }
      }
    }
    com.sap.engine.services.webservices.espbase.configuration.ConfigValueType[] _f_ConfigValue1 = this.getConfigValue();
    if (_f_ConfigValue1 != null) {
      for (int i1 = 0; i1 < _f_ConfigValue1.length ; i1++) {
        if (_f_ConfigValue1[i1] != null) {
          result+= _f_ConfigValue1[i1].hashCode();
        }
      }
    }
    return result;
  }
}
