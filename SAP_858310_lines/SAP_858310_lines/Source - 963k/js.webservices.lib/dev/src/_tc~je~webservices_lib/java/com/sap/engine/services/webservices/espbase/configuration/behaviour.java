/*
 * Generated by SAP SchemaToJava Generator NW05 on Tue Feb 22 14:02:04 EET 2005
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.services.webservices.espbase.configuration;

/**
 * Schema complexType Java representation.
 * Represents type {http://www.sap.com/webas/710/ws/configuration-descriptor}Behaviour
 */
public  class Behaviour implements java.io.Serializable,java.lang.Cloneable {
    
  // Element field for element {}PropertyList
  private java.util.ArrayList _f_PropertyList = new java.util.ArrayList();
  /**
   * Set method for element {}PropertyList
   */
  public void setPropertyList(com.sap.engine.services.webservices.espbase.configuration.PropertyListType[] _PropertyList) {
    this._f_PropertyList.clear();
    if (_PropertyList != null) {
      for (int i=0; i<_PropertyList.length; i++) {
        if (_PropertyList[i] != null)
          this._f_PropertyList.add(_PropertyList[i]);
      }
    }
  }
  /**
   * Get method for element {}PropertyList
   */
  public com.sap.engine.services.webservices.espbase.configuration.PropertyListType[] getPropertyList() {
    com.sap.engine.services.webservices.espbase.configuration.PropertyListType[] result = new com.sap.engine.services.webservices.espbase.configuration.PropertyListType[_f_PropertyList.size()];
    _f_PropertyList.toArray(result);
    return result;
  }

  /**
   * Equals method implementation.
   */
  public boolean equals(Object object) {
    if (object == null) return false;
    if (!(object instanceof Behaviour)) return false;
    Behaviour typed = (Behaviour) object;
    com.sap.engine.services.webservices.espbase.configuration.PropertyListType[] _f_PropertyList1 = this.getPropertyList();
    com.sap.engine.services.webservices.espbase.configuration.PropertyListType[] _f_PropertyList2 = typed.getPropertyList();
    if (_f_PropertyList1 != null) {
      if (_f_PropertyList2 == null) return false;
      if (_f_PropertyList1.length != _f_PropertyList2.length) return false;
      for (int i1 = 0; i1 < _f_PropertyList1.length ; i1++) {
        if (_f_PropertyList1[i1] != null) {
          if (_f_PropertyList2[i1] == null) return false;
          if (!_f_PropertyList1[i1].equals(_f_PropertyList2[i1])) return false;
        } else {
          if (_f_PropertyList2[i1] != null) return false;
        }
      }
    } else {
      if (_f_PropertyList2 != null) return false;
    }
    return true;
  }

  /**
   * Hashcode method implementation.
   */
  public int hashCode() {
    int result = 0;
    com.sap.engine.services.webservices.espbase.configuration.PropertyListType[] _f_PropertyList1 = this.getPropertyList();
    if (_f_PropertyList1 != null) {
      for (int i1 = 0; i1 < _f_PropertyList1.length ; i1++) {
        if (_f_PropertyList1[i1] != null) {
          result+= _f_PropertyList1[i1].hashCode();
        }
      }
    }
    return result;
  }
  
  public boolean isSinglePropertyList() {
    if (_f_PropertyList.size() == 1) {
      return true;
    }
    return false;
  } 
  /**
   * The method checks the number of property lists (alternatives)
   * available, and if there is exactly one property list, this list is returned.
   * If there is 0 property list, a new one will be created and returned.
   * Otherwise java.lang.IllegalStateException is thrown.
   *  
   * @see Behaviour#isSinglePropertyList()
   */
  public PropertyListType getSinglePropertyList() {
    if (isSinglePropertyList()) {
      return (PropertyListType) _f_PropertyList.get(0);
    } else if (_f_PropertyList.size() == 0) {
      PropertyListType p = new PropertyListType();
      _f_PropertyList.add(p);
      return p; //return an empty propertyList
    }
    throw new IllegalStateException("Multiple property lists not supported");
  }  
  
}
