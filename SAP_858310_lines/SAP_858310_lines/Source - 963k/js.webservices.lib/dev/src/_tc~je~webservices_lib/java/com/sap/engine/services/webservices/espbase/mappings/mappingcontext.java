/*
 * Generated by SAP SchemaToJava Generator NW05 on Wed Nov 10 18:12:45 EET 2004
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.services.webservices.espbase.mappings;

import java.util.Enumeration;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.Set;



/**
 * Root WSDL to Java mapping context.
 * Schema complexType Java representation.
 * Represents type {http://sapframework.sap.com}MappingContext
 */
public  class MappingContext extends java.lang.Object implements java.io.Serializable,java.lang.Cloneable {

  // Element field for elemenst {}property
  private HashMap<String,String> map = new HashMap<String,String>();
  
  /**
   * Set method for element {}property
   */
  public void setProperty(com.sap.engine.services.webservices.espbase.mappings.PropertyType[] _Property) {
    map.clear();
    if (_Property != null) {
      for (int i=0; i<_Property.length; i++) {
        PropertyType property = _Property[i];
        map.put(property.getName(),property.get_value());
      }
    }    
  }
  
  /**
   * Get method for element {}property
   */
  public com.sap.engine.services.webservices.espbase.mappings.PropertyType[] getProperty() {
    PropertyType[] properties = new PropertyType[map.size()];
    int counter = 0;
    Iterator<String> iterator1 = map.keySet().iterator();
    
    while (iterator1.hasNext()) {
      String key = (String) iterator1.next();
      String value = (String) map.get(key);
      PropertyType property = new PropertyType();
      property.set_value(value);
      property.setName(key);
      properties[counter] = property;
      counter++; 
    }          
    return properties;
  }
  
  /**
   * Sets property value.
   * @param name
   * @param value
   */
  public void setProperty(String name,String value) {
    if (value == null) {
      map.remove(name);
    } else {
      map.put(name,value);
    }
  }
  
  /**
   * Return property value.
   * @param name
   * @return
   */
  public String getProperty(String name) {
    return (String) map.get(name);
  }
  
  /**
   * Implements the equals method.
   * @param obj
   * @return
   */
  public boolean equals(Object obj) {
    if (obj instanceof MappingContext) {
      MappingContext mappingContext = (MappingContext) obj;
      return this.map.equals(mappingContext.map);
    }
    return super.equals(obj);
  }
  
  public int hashCode() {
    return super.hashCode();
  }
  
  public String toString() {
    return "Object class: " + getClass().getName() + " mappings: " + map.toString();
  }
  
  public Object clone()  throws CloneNotSupportedException {
    MappingContext result = (MappingContext) super.clone();
    result.map = (HashMap) this.map.clone(); 
    return result; 
  }

}
