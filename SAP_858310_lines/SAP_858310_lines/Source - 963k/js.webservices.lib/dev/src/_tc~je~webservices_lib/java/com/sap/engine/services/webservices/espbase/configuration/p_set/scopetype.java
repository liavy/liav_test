/*
 * Generated by SAP SchemaToJava Generator NW05 on Thu Nov 30 13:49:03 EET 2006
 * Copyright (c) 2002 by SAP Labs Sofia AG.
 * url: http://www.saplabs.bg
 * All rights reserved.
 */
package com.sap.engine.services.webservices.espbase.configuration.p_set;

/**
 * Enumeration Java representation.
 * Represents type {http://xml.sap.com/2006/11/esi/conf/feat/}scopeType
 */
public class ScopeType implements java.io.Serializable {

  private static final long serialVersionUID = -7820480905067479885L;

  public static final java.lang.String _IF = "IF";
  public static final java.lang.String _OP = "OP";
  public static final java.lang.String _BN = "BN";
  public static final java.lang.String _BO = "BO";
  public static final java.lang.String _SV = "SV";

  public static final ScopeType IF = new ScopeType(_IF);
  public static final ScopeType OP = new ScopeType(_OP);
  public static final ScopeType BN = new ScopeType(_BN);
  public static final ScopeType BO = new ScopeType(_BO);
  public static final ScopeType SV = new ScopeType(_SV);

  //  Enumeration Content
  protected java.lang.String _value;

  public ScopeType(java.lang.String _value) {
    if (_IF.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_OP.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_BN.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_BO.equals(_value)) {
      this._value = _value;
      return;
    }
    if (_SV.equals(_value)) {
      this._value = _value;
      return;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+_value+"] passed.");
  }

  public java.lang.String getValue() {
    return _value;
  }

  public static ScopeType fromValue(java.lang.String value) {
    if (_IF.equals(value)) {
      return IF;
    }
    if (_OP.equals(value)) {
      return OP;
    }
    if (_BN.equals(value)) {
      return BN;
    }
    if (_BO.equals(value)) {
      return BO;
    }
    if (_SV.equals(value)) {
      return SV;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+value+"] passed.");
  }

  public static ScopeType fromString(String value) {
    if ("IF".equals(value)) {
      return IF;
    }
    if ("OP".equals(value)) {
      return OP;
    }
    if ("BN".equals(value)) {
      return BN;
    }
    if ("BO".equals(value)) {
      return BO;
    }
    if ("SV".equals(value)) {
      return SV;
    }
    throw new IllegalArgumentException("Invalid Enumeration value ["+value+"] passed.");
  }

  public java.lang.String toString() {
    if (_IF.equals(_value)) {
      return "IF";
    }
    if (_OP.equals(_value)) {
      return "OP";
    }
    if (_BN.equals(_value)) {
      return "BN";
    }
    if (_BO.equals(_value)) {
      return "BO";
    }
    if (_SV.equals(_value)) {
      return "SV";
    }
    return java.lang.String.valueOf(_value);
  }

  public boolean equals(java.lang.Object obj) {
    if (obj != null) {
      if (obj instanceof ScopeType) {
        if (_value.equals(((ScopeType)obj)._value)) {
          return true;
        }
      }
    }
    return false;
  }

  public int hashCode() {
    return this._value.hashCode();
  }

}
